using System.Collections; using System.Collections.Generic; using UnityEngine;  public class Beads : MonoBehaviour {     public GameObject[] Vertices;     public GameObject[] edges;     public GameObject[] longedges;     public Vector3[] WVector;     public Vector3[] Vcoord;     public int BeadsLength;         // Start is called before the first frame update     void Start()     {         BeadsLength = 30;         Vertices = new GameObject[BeadsLength];         edges = new GameObject[BeadsLength];         longedges = new GameObject[BeadsLength];         Vcoord = new Vector3[BeadsLength];         WVector = new Vector3[BeadsLength];          //球の中心座標を決める         for (int i = 0; i < BeadsLength; i++)          {             Vcoord[i] = new Vector3(20f*Mathf.Cos(2f*Mathf.PI*i/BeadsLength), 1.5f, 20f * Mathf.Sin(2f * Mathf.PI * i / BeadsLength));         }          //帯の幅方向ベクトルを初期化する         for(int i = 0; i < BeadsLength; i++)         {             WVector[i] = new Vector3(0f, 1f, 0f);         }          //球を配置する(プレハブから作る)         GameObject prefab;         prefab = Resources.Load<GameObject>("Prefabs/Sphere");         for(int i = 0; i < BeadsLength; i++)         {             Vertices[i] = Instantiate<GameObject>(prefab, Vcoord[i], Quaternion.identity, transform);          }         //コントロールを決める         controll ctrl = FindObjectOfType<controll>();         ctrl.cursor = Vertices[0];         //エッジを配置する         GameObject shortEdgePrefab= Resources.Load<GameObject>("Prefabs/edge");         GameObject longEdgePrefab = Resources.Load<GameObject>("Prefabs/longedge");         edge edge;         for (int i = 0; i < BeadsLength-1; i++)         {             edges[i] = Instantiate<GameObject>(shortEdgePrefab, transform);             edge = edges[i].GetComponent<edge>();             edge.Vertex0 = Vertices[i];             edge.Vertex1 = Vertices[i + 1];         }         edges[BeadsLength-1] = Instantiate<GameObject>(shortEdgePrefab, transform);         edge = edges[BeadsLength-1].GetComponent<edge>();         edge.Vertex0 = Vertices[BeadsLength-1];         edge.Vertex1 = Vertices[0];         for (int i = 0; i < BeadsLength-2; i++)         {             longedges[i] = Instantiate<GameObject>(longEdgePrefab, transform);             edge = longedges[i].GetComponent<edge>();             edge.Vertex0 = Vertices[i];             edge.Vertex1 = Vertices[i + 2];         }         longedges[BeadsLength-2] = Instantiate<GameObject>(longEdgePrefab, transform);         edge = longedges[BeadsLength-2].GetComponent<edge>();         edge.Vertex0 = Vertices[BeadsLength-2];         edge.Vertex1 = Vertices[0];         longedges[BeadsLength - 1] = Instantiate<GameObject>(longEdgePrefab, transform);         edge = longedges[BeadsLength - 1].GetComponent<edge>();         edge.Vertex0 = Vertices[BeadsLength - 1];         edge.Vertex1 = Vertices[1];     }       // Update is called once per frame     void Update()     {          //for(int i = 0; i < 5; i++)         //{         //    Vertices[i].transform.position = Vcoord[i];         //}     } }
